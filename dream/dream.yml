---
# file: dream.yml

# Gather facts
- hosts: all
  tags: verify
  tasks:
    - setup:

- hosts: dream-DISABLED
  tags: caffe
  sudo: yes
  vars:
    caffe_parent: /opt
    caffe_dir: /opt/caffe-master
  tasks: 
    - name: General dependencies
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - unzip 
        - python-dev
        - python-virtualenv
        - python-pip
        - libjpeg-dev

    - name: Caffe general dependencies
      apt: name={{ item }}
      with_items:
        - libprotobuf-dev
        - libleveldb-dev
        - libsnappy-dev
        - libopencv-dev
        - libhdf5-serial-dev

    - name: Caffe general dependencies - boost
      apt: name=libboost-all-dev install_recommends=no

    - name: Caffe dependencies - BLAS
      apt: name=libatlas-base-dev

    - name: Caffee remaining dependencies
      apt: name={{ item }}
      with_items:
        - libgflags-dev
        - libgoogle-glog-dev
        - liblmdb-dev
        - protobuf-compiler

    - name: fetch Caffe
      get_url: dest=/tmp/master.zip url=https://github.com/BVLC/caffe/archive/master.zip

    - name: unpack Caffe
      unarchive: src=/tmp/master.zip dest={{ caffe_parent }} copy=no

    - name: create config out of config.example
      command: cp Makefile.config.example Makefile.config chdir={{ caffe_dir }}
        creates={{ caffe_dir }}/Makefile.config

    - name: Makefile fix - CPU_ONLY
      lineinfile: dest={{ caffe_dir }}/Makefile.config regexp="CPU_ONLY := 1"
        line="CPU_ONLY := 1"

    - name: Makefile fix - INCLUDE_DIRS
      lineinfile: dest={{ caffe_dir }}/Makefile.config regexp="^INCLUDE_DIRS :="
        line="INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial/ /usr/local/lib/python2.7/dist-packages/numpy/core/include/"

    - name: make caffe
      command: make all chdir={{ caffe_dir }}

    - name: Python Caffe dependencies - gfortran to compile scipy
      apt: name={{ item }}
      with_items:
        - gfortran

    - name: Python Caffe package dependencies (from requirements.txt)
    # For some reason the pip -r requirements.txt thingy does not work
      pip: name={{ item }}
      with_items: 
        - "Cython>=0.19.2"
        - "numpy>=1.7.1"
        - "scipy>=0.13.2"
        - "scikit-image>=0.9.3"
        - "matplotlib>=1.3.1"
        - "ipython>=3.0.0"
        - "h5py>=2.2.0"
        - "leveldb>=0.191"
        - "networkx>=1.8.1"
        - "nose>=1.3.0"
        - "pandas>=0.12.0"
        - "python-dateutil>=1.4,<2"
        - "protobuf>=2.5.0"
        - "python-gflags>=2.0"
        - "pyyaml>=3.10"
        - "Pillow>=2.3.0"
        - "six>=1.1.0"

    - name: Python Caffe dependencies 
      pip: requirements={{ caffe_dir }}/python/requirements.txt
      when: False

    - name: make pycaffe
      command: make pycaffe chdir={{ caffe_dir }}

    - name: patch device to avoid Failed to initialize libdc1394 error
      file: state=link path=/dev/raw1394 src=/dev/null

    - name: fetch model
      get_url: dest={{ caffe_dir }}/models/bvlc_googlenet
        url=http://dl.caffe.berkeleyvision.org/bvlc_googlenet.caffemodel
        
- hosts: dream
  tags: googlemodel
  sudo: yes
  vars:
    caffe_dir: /home/ubuntu/caffe
  tasks: 
    - name: fetch model
      get_url: dest={{ caffe_dir }}/models/bvlc_googlenet
        url=http://dl.caffe.berkeleyvision.org/bvlc_googlenet.caffemodel


- hosts: dream
  tags: ipython
  sudo: yes
  vars:
    notebook_configdir: /home/ubuntu/.ipython/profile_default
    notebook_config: "{{ notebook_configdir }}/ipython_notebook_config.py"
  tasks: 
    - name: General dependencies
      apt: name={{ item }}
      with_items:
        - unzip 
        - python-dev
        - python-virtualenv
        - python-pip

    - name: IPython and notebook dependencies
      pip: name={{ item }}
      with_items:
        - ipython
        - "pyzmq>=13"
        - jinja2
        - tornado
        - jsonschema

    - name: Configure IPython
      sudo: no
      command: ipython profile create

    - name: IPython config
      sudo: no
      lineinfile: dest={{ notebook_config }}
        regexp="c.NotebookApp.ip"
        line="c.NotebookApp.ip = '*'"

    - name: IPython config
      sudo: no
      lineinfile: dest={{ notebook_config }}
        regexp="c.NotebookApp.open_browser"
        line="c.NotebookApp.open_browser = False"

    - name: Create IPython notebooks notebooks dir
      file: path=/home/ubuntu/ipython_notebooks state=directory

    - name: IPython notebooks
      sudo: no
      lineinfile: dest={{ notebook_config }}
        regexp="c.NotebookApp.notebook_dir"
        line="c.NotebookApp.notebook_dir = '/home/ubuntu/ipython_notebooks'"

    - name: IPython config
      sudo: no
      lineinfile: dest={{ notebook_config }}
        regexp="c.NotebookApp.password"
        line="c.NotebookApp.password = u'sha1:f5352e7b4574:6a9c69475a7c43687e006ebfbf5afb3467a74c39'"

    - name: IPython config
      sudo: no
      lineinfile: dest={{ notebook_config }}
        regexp="c.NotebookApp.certfile"
        line="c.NotebookApp.certfile = '{{ notebook_configdir }}/hostcert.pem'"

    - name: IPython config
      sudo: no
      lineinfile: dest={{ notebook_config }}
        regexp="c.NotebookApp.port"
        line="c.NotebookApp.port = 443"

